#로컬 환경
spring.profiles.active=local
server.port=8002
message=hi real

# 개발할 때에만 create-drop 또는 update를 사용하고 운영 환경에서는 validate를 사용합니다.
#spring.jpa.hibernate.ddl-auto=create-drop

# 개발시 SQL 로깅을 하여 어떤 값으로 어떤 SQL이 실행되는지 확인합니다.
# spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#characterEncoding=UTF-8&serverTimezone=UTC
#jdbc:mysql://127.0.0.1:3306/familyevents?serverTimezone=Asia/Seoul&useSSL=false&characterEncoding=utf8&allowPublicKeyRetrieval=true&useSSL=false
#Database Configuration

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/familyevents?characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.username=familyevents
spring.datasource.password=error404!
spring.datasource.initialize=false
spring.datasource.continueOnError=true
spring.datasource.max-active=10
spring.datasource.max-idle=10
spring.datasource.min-idle=1
spring.datasource.max-wait=-1
spring.datasource.initial-size=1
spring.datasource.test-on-borrow=true
spring.datasource.test-while-idle=true

#spring.datasource.validation-query=

#5 minutes
spring.datasource.time-between-eviction-runs-millis=300000

#Swagger Configuration
#server.contextPath=/reservation/v2
#springfox.documentation.swagger.v2.path=/api-docs